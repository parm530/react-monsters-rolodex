{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","resp","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAACC,GAAD,OACjB,sBAAKC,UAAU,iBAAf,UACK,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCDbC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCT1BM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC0CJG,G,wDA1Cd,aAAe,IAAD,8BACb,gBAiBDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAhBrC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IALD,E,qDAYd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAM,SAAAC,GAAI,OAAIA,EAAKC,UACnBF,MAAM,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAQ3C,WAAU,IAAD,EACwBC,KAAKN,MAA9Bb,EADC,EACDA,SAAUU,EADT,EACSA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC/CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGjD,OACC,sBAAK9B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAee,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GArCNI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0ee27ee3.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\n\nexport const Card = (props) => (\n   <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n   </div> \n)","// no need to .component to the file extension\n// used by author to distinguish what kind of file this is\n\nimport React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n    return (\n        <div className='card-list'>\n            {\n                props.monsters.map( monster =>  \n                    <Card key={monster.id} monster={monster} />\n                )\n            }\n        </div>\n    )\n}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n        className='search'\n        type='search'\n        placeholder={ placeholder } \n        onChange={ handleChange } \n    />\n)","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t};\n\n\t\t// unless using arrow function below\n\t\t// this.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then( resp => resp.json() )\n\t\t\t.then( users => this.setState({monsters: users}) );\n\t}\n\t\n\thandleChange = (e) => {\n\t\tthis.setState({searchField: e.target.value})\n\t};\n\n\n\trender() {\n\t\tconst {monsters, searchField} = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster => \n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox \n\t\t\t\t\tplaceholder='search monsters' \n\t\t\t\t\thandleChange={ this.handleChange }\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} /> \n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}